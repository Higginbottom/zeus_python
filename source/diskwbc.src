#include "zeus2d.def"
c=====================================================================
c///////////////////  SUBROUTINE DISKWBC \\\\\\\\\\\\\\\\\\\\\\\\\\\
c
      subroutine diskwbc
c
c  SETS BOUNDARY CONDITIONS AT BASE OF a DISK WIND
c
c     written by: Daniel Proga
c     date:       May 2008
c     modified1:  
c
c  INPUT PARAMETERS:
c
c----------------------------------------------------------------------
      implicit NONE
#include "cons.h"
#include "param.h"
#include "grid.h"
#include "field.h"
#include "root.h"
#include "scratch.h"
#include "gravity.h"
#include "bndry.h"
#include "diskw.h"
#include "zeus_python.h"
         

      integer i,j
	  real*8 tfloor
c
      external bvalv1,bvalv2,bvalv3,bvald,bvale
c\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////
c=======================================================================
c
c  set d, e, velocity at last cell in j
c
       dfloor=1d-6
c	print *,dfloor*d0
       do  i=is,ie
        do  j=is,je
        if (d (i,j).le.1e-22) d(i,j)=1e-22
		
c these lines set the temperature floor to the temperature of a thin accretion disk		
		tfloor=((3.0*ptmass*mdot*guniv)/  (8.0*pi*sb*
     &   (x1b(i)*sin(x2b(j)))**3.0) )**0.25
c these lines check to see if the accretion disk floor is lower than the 
c lowest temperature in the loouk tables, and resets accordingly
	 if (tfloor.lt.lu_temp(1)) then
		 tfloor=lu_temp(1)
	 endif
c this undoes all the work above and sets the floor to something by hand	 
c	 tfloor=100.

c the next lines are commented out - this means we are not baselining the temperature

c		 if (e(i,j) .le. (3.0*d(i,j)*boltz*tfloor)/(2.0*mp*mu)) then
c			 e(i,j)=(3.0*d(i,j)*boltz*tfloor)/(2.0*mp*mu)
c		 endif
        enddo 
       enddo 

       do  i=is,ie
		   if (x1b(i).lt.2.*48.246764e10) then
        d(i,je)=djop1(i)  
		
			endif
        v1(i,je)=0.0
        v3(i,je)=v3jop1(i)
c         if (e(i,je).le.ejop1(i)) e(i,je)=ejop1(i) 
       enddo 

       call bvald
       call bvale
       call bvalv1
       call bvalv2

      return
      end
